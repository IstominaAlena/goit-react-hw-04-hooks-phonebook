{"version":3,"sources":["shared/components/Section/Section.module.css","shared/components/Input/Input.module.css","components/ContactList/ContactList.module.css","shared/components/Button/Button.module.css","components/FormContacts/FormContacts.module.css","shared/components/Section/Section.jsx","shared/components/Input/Input.jsx","shared/components/Button/Button.jsx","components/FormContacts/FormContacts.jsx","components/ContactList/ContactList.jsx","hooks/useLocalStorage.js","App.js","index.js"],"names":["module","exports","Section","title","children","classEl","className","styles","container","forChildrens","id","nanoid","Input","props","labelName","value","onChange","type","name","pattern","placeholderValue","filterComponent","formComponent","htmlFor","formLabel","formInput","placeholder","defaultProps","undefined","Button","text","onClick","submitBtn","btn","FormContacts","useState","setName","number","setNumber","handleInputChange","e","target","contact","onSubmit","preventDefault","submitedData","form","ContactList","contacts","onDeleteItem","contactList","map","contactItem","src","toonavatar","generate_avatar","alt","width","contactImg","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","App","setContacts","filter","setFilter","lowerCaseName","toLowerCase","findInArray","this","find","alert","addContactHandler","currentTarget","lowerCaseFilter","includes","filterContactsHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26991f72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Section_contacts__2PluI\",\"phonebook\":\"Section_phonebook__sCjmC\",\"container\":\"Section_container__1-Wdy\",\"title\":\"Section_title__3TlRP\",\"forChildrens\":\"Section_forChildrens__UZYZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Input_formComponent__2dvvT\",\"filterComponent\":\"Input_filterComponent__2FIxZ\",\"formLabel\":\"Input_formLabel__1DbrJ\",\"formInput\":\"Input_formInput__2QYGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__yJsph\",\"contactItem\":\"ContactList_contactItem__o6XPr\",\"contactImg\":\"ContactList_contactImg__1zemK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"Button_submitBtn__VIpjl\",\"btn\":\"Button_btn__15mgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__1mQCG\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children, classEl }) => {\r\n  return (\r\n    <section className={styles[classEl]}>\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>{title}</h2>\r\n        <div className={styles.forChildrens}>{children}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport styles from './Input.module.css';\r\n\r\nconst id = nanoid();\r\n\r\nconst Input = props => {\r\n  const { labelName, value, onChange, type, name, pattern, title, placeholderValue } = props;\r\n\r\n  return (\r\n    <div className={name === 'filter' ? styles.filterComponent : styles.formComponent}>\r\n      <label htmlFor={id} className={styles.formLabel}>\r\n        {labelName}:\r\n      </label>\r\n      <input\r\n        className={styles.formInput}\r\n        id={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        type={type}\r\n        name={name}\r\n        pattern={pattern}\r\n        title={title}\r\n        placeholder={placeholderValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: undefined,\r\n};\r\n\r\nInput.propTypes = {\r\n  labelName: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ type, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick ? onClick : undefined}\r\n      type={type}\r\n      className={type === 'submit' ? styles.submitBtn : styles.btn}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  onClick: undefined,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../../shared/components/Input';\r\nimport Button from '../../shared/components/Button';\r\n\r\nimport styles from './FormContacts.module.css';\r\n\r\nconst FormContacts = props => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  function handleInputChange(e) {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.submitedData(contact);\r\n    resetForm();\r\n  }\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <Input\r\n          labelName=\"Name\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholderValue=\"Jane Doe\"\r\n        />\r\n\r\n        <Input\r\n          labelName=\"Number\"\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          placeholderValue=\"+38-099-123-45-67\"\r\n        />\r\n\r\n        <Button type=\"submit\" text=\"Add contact\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormContacts;\r\n\r\nFormContacts.propTypes = {\r\n  submitedData: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport toonavatar from 'cartoon-avatar';\r\nimport styles from './ContactList.module.css';\r\n\r\nimport Button from '../../shared/components/Button';\r\n\r\nconst ContactList = ({ contacts, onDeleteItem }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contactItem}>\r\n          <img\r\n            src={toonavatar.generate_avatar()}\r\n            alt=\"img\"\r\n            width=\"60\"\r\n            className={styles.contactImg}\r\n          />\r\n          <div>\r\n            <p>{name}:</p>\r\n            <p>{number}</p>\r\n          </div>\r\n\r\n          <Button type=\"button\" text=\"&#128473;\" onClick={() => onDeleteItem(id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state, key]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useState } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport Section from './shared/components/Section';\nimport FormContacts from './components/FormContacts';\nimport Input from './shared/components/Input';\nimport ContactList from './components/ContactList';\n\nimport useLocalStorage from './hooks/useLocalStorage';\n\nimport './styles/App.css';\n\nconst App = () => {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  function checkContactHandler({ name, number }) {\n    if (!name) {\n      return alert('Please enter name!');\n    }\n    if (!number) {\n      return alert('Please enter number!');\n    }\n    addContactHandler({ name, number });\n  }\n\n  function addContactHandler({ name, number }) {\n    const lowerCaseName = name.toLowerCase();\n    const contact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n\n    const findInArray = this.state.contacts.find(({ name }) => {\n      const lowerCaseStateName = name.toLowerCase();\n      return lowerCaseStateName === lowerCaseName;\n    });\n\n    if (findInArray) {\n      return alert(`${name} is already in your contacts!`);\n    }\n\n    setContacts(contacts => [...contacts, contact]);\n  }\n\n  function deleteContactHandler(id) {\n    setContacts(contacts => contacts.filter(contact => contact.id !== id));\n  }\n\n  function filterChangeHandler(e) {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  }\n\n  function filterContactsHandler() {\n    if (!filter) {\n      return contacts;\n    }\n\n    const lowerCaseFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(({ name }) => {\n      const lowerCaseName = name.toLowerCase();\n      return lowerCaseName.includes(lowerCaseFilter);\n    });\n\n    return filteredContacts;\n  }\n\n  return (\n    <>\n      <Section title={'Phonebook'} classEl={'phonebook'}>\n        <FormContacts submitedData={checkContactHandler} />\n        <Input\n          labelName=\"Find contact by name\"\n          value={filter}\n          onChange={filterChangeHandler}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholderValue=\"Search\"\n        />\n      </Section>\n\n      <Section title={'Contacts'} classEl={'contacts'}>\n        <ContactList contacts={filterContactsHandler()} onDeleteItem={deleteContactHandler} />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}